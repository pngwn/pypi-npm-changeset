name: publish

on:
  push:
    branches:
      - "main"
  pull_request:

env:
  CI: true
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  publish:
    name: static checks
    runs-on: ubuntu-22.04
    steps:
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: create and publish versions
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          commit: "chore: update versions"
          title: "chore: update versions"
          publish: pnpm ci:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GRADIO_PAT }}
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: |
            requirements.txt
      - name: Create env
        run: |
          python -m pip install --upgrade virtualenv
          python -m virtualenv venv
      - name: Install Gradio (Linux)
        run: |
          . venv/bin/activate
          python -m pip install -e .
  publish_gradio:
    name: publish python
    runs-on: ubuntu-22.04
    needs: publish
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: |
            requirements.txt
      - name: Check new pypi version
        run: python client/python/scripts/check_pypi.py --name="gradio"
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
  publish_gradio_client:
    name: publish python client
    runs-on: ubuntu-22.04
    needs: publish
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: |
            requirements.txt
      - name: Check new pypi version
        run: python client/python/scripts/check_pypi.py --name="gradio_client"
      - name: Build pypi package
        run: |
          client/python/scripts/build_pypi.sh
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: client/python/dist